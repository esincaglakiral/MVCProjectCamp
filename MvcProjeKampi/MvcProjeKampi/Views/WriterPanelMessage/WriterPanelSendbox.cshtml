@using EntityLayer.Concrete
@model List<Message>
@{
    ViewBag.Title = "WriterPanelSendbox";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";
}

<!DOCTYPE html>
<html>

<body class="hold-transition sidebar-mini">

    <!-- Content Wrapper. Contains page content -->
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Gönderilen Mesajlar Sayfası</h1>
                </div>

            </div>
        </div><!-- /.container-fluid -->
    </section>
    <!-- Main content -->
    <section class="content">
        <div class="row">
            @Html.Action("WriterMessageListMenu", "WriterPanelMessage")
            <!-- /.col -->
            <div class="col-md-9">
                <div class="card card-primary card-outline">
                    <div class="card-header">
                        <h3 class="card-title">Gönderilen Mesajlar</h3>
                        <div class="card-tools">
                            <div class="input-group input-group-sm">
                                <input type="text" class="form-control" placeholder="Mail Kutusunda Ara">
                                <div class="input-group-append">
                                    <div class="btn btn-primary">
                                        <i class="fas fa-search"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- /.card-tools -->
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body p-0">
                        <div class="mailbox-controls">
                            <!-- Check all button -->

                            <div class="float-right">
                                1-50/200
                                <div class="btn-group">
                                    <button type="button" class="btn btn-default btn-sm"><i class="fas fa-chevron-left"></i></button>
                                    <button type="button" class="btn btn-default btn-sm"><i class="fas fa-chevron-right"></i></button>
                                </div>
                                <!-- /.btn-group -->
                            </div>
                            <!-- /.float-right -->
                        </div>
                        <div class="table-responsive mailbox-messages">
                            <table class="table table-hover table-striped">
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                    <tr>
                                        <td>
                                            <div class="icheck-primary">
                                                <input type="checkbox" value="@item.MessageID" id="check@item.MessageID" class="message-checkbox">
                                                <label for="check@item.MessageID"></label>
                                            </div>
                                        </td>
                                        <td class="mailbox-star"><a href="/WriterPanelMessage/GetWriterSendboxDetails/@item.MessageID"><i class="fas fa-star text-warning"></i></a></td>
                                        <td class="mailbox-name"><a href="/WriterPanelMessage/GetWriterSendboxDetails/@item.MessageID">@item.ReceiverMail</a></td>
                                        <td class="mailbox-subject">
                                        <td class="mailbox-subject">
                                            <b>@item.Subject</b> - @(item.MessageContent.Length > 30 ? item.MessageContent.Substring(0, 30) + "..." : item.MessageContent)
                                        </td>

                                        </td>
                                        <td class="mailbox-attachment"></td>
                                        <td class="mailbox-date">@(((DateTime)item.MessageDate).ToString("dd-MMM-yyyy hh:mm"))</td>

                                    </tr>
                                    }

                                </tbody>
                            </table>
                            <!-- /.table -->
                        </div>
                        <!-- /.mail-box-messages -->
                    </div>
                    <!-- /.card-body -->
                    <div class="card-footer p-0">
                        <div class="mailbox-controls">
                            <!-- Check all button -->
                            <button type="button" class="btn btn-default btn-sm checkbox-toggle">
                                <i class="far fa-square"></i>
                            </button>
                            <div class="btn-group">
                                <button type="button" id="delete-selected-button" class="btn btn-default btn-sm"><i class="far fa-trash-alt"></i></button>
                                <button type="button" class="btn btn-default btn-sm"><i class="fas fa-reply"></i></button>
                                <button type="button" class="btn btn-default btn-sm"><i class="fas fa-share"></i></button>
                            </div>
                            <!-- /.btn-group -->
                            <button type="button" class="btn btn-default btn-sm"><i class="fas fa-sync-alt"></i></button>
                            <div class="float-right">
                                1-50/200
                                <div class="btn-group">
                                    <button type="button" class="btn btn-default btn-sm"><i class="fas fa-chevron-left"></i></button>
                                    <button type="button" class="btn btn-default btn-sm"><i class="fas fa-chevron-right"></i></button>
                                </div>
                                <!-- /.btn-group -->
                            </div>
                            <!-- /.float-right -->
                        </div>
                    </div>
                </div>
                <!-- /.card -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </section>

</body>
</html>

<script>
    $(function () {
        //Enable check and uncheck all functionality
        $('.checkbox-toggle').click(function () {
            var clicks = $(this).data('clicks')
            if (clicks) {
                //Uncheck all checkboxes
                $('.mailbox-messages input[type="checkbox"]').prop('checked', false)
                $('.checkbox-toggle .far.fa-check-square').removeClass('fa-check-square').addClass('fa-square')
            } else {
                //Check all checkboxes
                $('.mailbox-messages input[type="checkbox"]').prop('checked', true)
                $('.checkbox-toggle .far.fa-square').removeClass('fa-square').addClass('fa-check-square')
            }
            $(this).data('clicks', !clicks)
        })

        //Handle starring for glyphicon and font awesome
        $('.mailbox-star').click(function (e) {
            e.preventDefault()
            //detect type
            var $this = $(this).find('a > i')
            var glyph = $this.hasClass('glyphicon')
            var fa = $this.hasClass('fa')

            //Switch states
            if (glyph) {
                $this.toggleClass('glyphicon-star')
                $this.toggleClass('glyphicon-star-empty')
            }

            if (fa) {
                $this.toggleClass('fa-star')
                $this.toggleClass('fa-star-o')
            }
        })
    })

    function getSelectedMessageIds() {
        var selected = [];
        document.querySelectorAll('.message-checkbox:checked').forEach(function (checkbox) {
            selected.push(checkbox.value);
        });
        return selected;
    }

    function deleteSelectedMessages() {
        var selectedIds = getSelectedMessageIds();
        if (selectedIds.length > 0) {
            // Send selectedIds to the server
            fetch('/WriterPanelMessage/DeleteSelectedWriterSendbox', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ ids: selectedIds })
            })
            .then(response => {
                if (response.ok) {
                    window.location.reload();
                } else {
                    alert('Bir hata oluştu, lütfen tekrar deneyin.');
                }
            });
        } else {
            alert('Lütfen silmek istediğiniz mesajları seçin.');
        }
    }

    document.getElementById('delete-selected-button').addEventListener('click', deleteSelectedMessages);
</script>


